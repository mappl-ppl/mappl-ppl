#!/usr/bin/perl
#
# Usage: pcfg-gen-perpl $length $prob
#
# Generate a PERPL program to compute the probability of string $length
# generated by the PCFG
#   S -> SS (probability $prob)
#   S -> a  (probability 1-$prob)

use strict;
my $length = $ARGV[0] // 6;
my $prob = $ARGV[1] // 0.5;
my $q = 1-$prob;

print <<'END';
data Terminal = A;
data Nonterminal = S;
data RHS = Unary Terminal | Binary Nonterminal Nonterminal;
data String = Nil | Cons Terminal String;

define production: Nonterminal -> RHS = \x.
END
print <<"END";
  case x of S -> amb (factor $q in Binary S S) (factor $prob in Unary A);
END
print <<'END';

define gen: Nonterminal -> String -> String = \x: Nonterminal. \acc: String.
  case production x of
    | Unary a -> Cons a acc
    | Binary y z -> gen y (gen z acc);

define equal: String -> String -> Bool = \xs: String. \ys: String.
  case xs of
    | Nil -> (case ys of Nil -> True | Cons _ _ -> False)
    | Cons x xs -> (case ys of
      | Nil -> False
      | Cons y ys -> if x == y then equal xs ys else False);

equal (gen S Nil)
END
print " (Cons A" x $length, " Nil", ")" x $length, "\n";
